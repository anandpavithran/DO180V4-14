oc login -u developer -p developer https://api.ocp4.example.com:6443
oc project cli-resources
oc api-resources
oc api-resources --namespaced
oc api-resources --namespaced -o name | wc -l
oc api-resources --namespaced=false
oc api-resources --namespaced=false -o name | wc -l
oc api-resources --api-group ''
oc explain pods
oc get pods
oc describe pod $(oc get pods -o custom-columns=POD:.metadata.name --no-headers)
oc get pod $(oc get pods -o custom-columns=POD:.metadata.name --no-headers) -o yaml
oc api-resources --api-group apps
oc explain deployments
oc get deploy
oc get deploy myapp -o wide
oc describe deployment myapp
oc api-resources --api-group config.openshift.io
oc explain projects
oc describe project cli-resources
oc get project cli-resources -o json
oc get pods -n openshift-etcd
oc login -u admin -p redhatocp
oc get pods -n openshift-etcd
oc get pods etcd-master01 -n openshift-etcd -o=jsonpath='{.spec.containers[0].image}'{"\n"}
oc get pods -n openshift-etcd etcd-master01 -o json | jq .spec.containers[0].image
oc get pods -n openshift-etcd etcd-master01 -o go-template='{{(index .spec.containers 0).image}}'
oc get pods -n openshift-monitoring prometheus-k8s-0 -o yaml | yq r - 'status.conditions'
oc get pods -n openshift-storage -o custom-columns=PodName:".metadata.name",ContainerName:"spec.containers[].name",Phase:"status.phase",IP:"status.podIP",Ports:"spec.containers[].ports[].containerPort"
